# 第一阶段：构建Vue前端
FROM node:18 as web-builder
WORKDIR /app
COPY main/manager-web/package*.json ./
RUN npm install
COPY main/manager-web .
RUN npm run build

# 第二阶段：构建Java后端
FROM maven:3-eclipse-temurin-21-alpine as api-builder
WORKDIR /app
COPY main/manager-api/pom.xml .
COPY main/manager-api/src ./src
RUN mvn clean package -Dmaven.test.skip=true

# 第三阶段：构建最终镜像
FROM eclipse-temurin:21-jdk-jammy

# 安装Nginx并清理缓存
RUN apt-get update && \
    apt-get install -y nginx && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 配置Nginx
COPY docs/docker/nginx.conf /etc/nginx/conf.d/default.conf

# 复制前端构建产物
COPY --from=web-builder /app/dist /usr/share/nginx/html

# 复制Java后端JAR包
COPY --from=api-builder /app/target/xiaozhi-esp32-api.jar /app/xiaozhi-esp32-api.jar

# 暴露端口
EXPOSE 8002

# 启动脚本
COPY docs/docker/start.sh /start.sh
RUN chmod +x /start.sh
CMD ["/start.sh"]